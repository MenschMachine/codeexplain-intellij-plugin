name: Release Plugin

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Permissions needed for creating releases
permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.5

      - name: Calculate next version
        id: calculate_version
        run: |
          CURRENT_VERSION=$(./get-current-version.sh 2> /dev/null)
          # Set the output variable for use in later steps
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version is: $CURRENT_VERSION"

      - name: Build plugin
        run: ./gradlew buildPlugin

      - name: Create Git Tag
        run: |
          git tag -a v${{ steps.calculate_version.outputs.current_version }} -m "Release v${{ steps.calculate_version.outputs.current_version }}"
          git push origin v${{ steps.calculate_version.outputs.current_version }}

      - name: List Distribution Files
        run: |
          echo "Listing files in build/distributions:"
          ls -la build/distributions/

      - name: Create GitHub Release
        id: create_release
        run: |
          # Find the built plugin ZIP file
          PLUGIN_ZIP=$(find build/distributions -name "*.zip" | head -n 1)
          if [ -z "$PLUGIN_ZIP" ]; then
            echo "No ZIP file found in build/distributions. Using wildcard pattern."
            PLUGIN_ZIP="build/distributions/*.zip"
          fi
          echo "Found plugin ZIP: $PLUGIN_ZIP"

          # Create a release using GitHub CLI
          gh release create v${{ steps.calculate_version.outputs.current_version }} "$PLUGIN_ZIP" \
            --title "Release v${{ steps.calculate_version.outputs.current_version }}" \
            --notes "Automated release v${{ steps.calculate_version.outputs.current_version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Plugin to JetBrains Marketplace
        run: |
          if [ -n "${{ secrets.INTELLIJ_MARKETPLACE_TOKEN }}" ]; then
            ./gradlew publishPlugin
          else
            echo "INTELLIJ_MARKETPLACE_TOKEN not set, skipping marketplace upload"
          fi
        env:
          INTELLIJ_MARKETPLACE_TOKEN: ${{ secrets.INTELLIJ_MARKETPLACE_TOKEN }}
